function GetResearcherUsername(){var n=document.getElementById(RequestLinkAppt);if(n&&n.value)return n.value.slice(2)}function DisableField(n){document.getElementById(n).disabled=!0}function EnableField(n){document.getElementById(n).disabled=!1}function SetAppointmentRequiredLabel(){let r=document.getElementById("ReadingRoomID"),t=document.getElementById("AppointmentID"),i=document.getElementById("AppointmentRequired"),n=null;window.readingRoom&&(n=(window.readingRoom.AppointmentRequired??"false").toLowerCase()==="true");t!=null&&(n?t.setAttribute("required",""):t.removeAttribute("required",""));i!=null&&(n?i.classList.remove("d-none"):i.classList.add("d-none"));r&&r.value!=""?n?ShowMessage("An appointment is required for the selected reading room."):ShowMessage("An appointment is not required for the selected reading room."):ShowMessage("")}async function GetReadingRooms(){if(!OnAppointmentEditForm&&!OnViewAppointmentsPage){if($("#ReadingRoomID").val()!=null&&$("#ReadingRoomID").attr("data-persisted-value",$("#ReadingRoomID").val()),$("#Site").prop("tagName").toLowerCase()=="select"&&!$("#Site").val()&&$("#Site option[value!='']").length>1){$("#ReadingRoomID").prop("disabled",!0);$("#ReadingRoomID").empty();return}document.getElementById("ReadingRoomID")!=null&&document.getElementById("ReadingRoomID").offsetParent!=null&&$("#ReadingRoomID").prop("disabled",!1)}let n={};return $("#Site")&&(n.site=$("#Site").val()),GetResearcherUsername()&&(n.ResearcherUsername=GetResearcherUsername()),new Promise(t=>{$.ajax({type:"GET",url:"aeon.dll/ajax?query=GetReadingRooms",data:n,success:function(n){n.status=="success"?PopulateReadingRooms(n.data).then(()=>t(n.data)):(HandleError(n),console.log(n.message))},error:function(){HandleError("Server error. Please refresh the page and try again. If this error persists, please contact staff.");console.log("Server Error")}})})}async function PopulateReadingRooms(n){if(window.readingRooms=n,!OnAppointmentEditForm){let n=document.getElementById("ReadingRoomID");if(n.innerHTML="",window.readingRooms.forEach(t=>{t.OpenHours.length>0&&AddOption(n,t.ReadingRoomName,t.ID,!1)}),n.options.length<1){AddOption(n,"No Reading Rooms available",null,!0);n.value=null;DisableField("AppointmentDate");DisableField("AppointmentLength");DisableField("AppointmentTime");DisableField("AvailableToProxies");DisableField("Name");DisableField("CreateAppointmentButton");return}EnableField("AppointmentDate");EnableField("AppointmentLength");EnableField("AppointmentTime");EnableField("AvailableToProxies");EnableField("Name");EnableField("CreateAppointmentButton");SelectPersistedValue($("#ReadingRoomID"))}window.readingRoom=readingRooms.filter(n=>n.ID===document.getElementById("ReadingRoomID").value)[0];await GetAppointments();await RefreshDatePicker();SetAppointmentRequiredLabel()}async function RefreshDatePicker(){datesChecked=[];let t=moment().add(parseInt(readingRoom.AppointmentMinLeadDays),"days").toDate(),i=moment().add(parseInt(readingRoom.AppointmentMaxLeadDays),"days").toDate();disabledDays=[!readingRoom.OpenHours.some(n=>n.DayOfWeek==1),!readingRoom.OpenHours.some(n=>n.DayOfWeek==2),!readingRoom.OpenHours.some(n=>n.DayOfWeek==3),!readingRoom.OpenHours.some(n=>n.DayOfWeek==4),!readingRoom.OpenHours.some(n=>n.DayOfWeek==5),!readingRoom.OpenHours.some(n=>n.DayOfWeek==6),!readingRoom.OpenHours.some(n=>n.DayOfWeek==0)];datePickerController.destroyDatePicker("AppointmentDate");datePickerController.createDatePicker({formElements:{AppointmentDate:"%m/%d/%Y"},noTodayButton:"true",positioned:"datePickerContainer",finalOpacity:100,nopopup:"true",disabledDays:disabledDays,rangeLow:t,rangeHigh:i,callbackFunctions:{domcreate:[function(){document.getElementById("fd-AppointmentDate").setAttribute("aria-modal","false")}],datereturned:[FilterAppointmentLengthMenu],redraw:[UpdateDisplayedAvailability]}});datePickerController.enable("AppointmentDate");let n=datePickerController.datePickers().AppointmentDate;await UpdateDisplayedAvailability({firstDateDisplayed:n.firstDateShown,lastDateDisplayed:n.lastDateShown});BuildAppointmentLengthMenu()}function BuildAppointmentLengthMenu(){let n=document.getElementById("AppointmentLength");if(n.innerHTML="",window.readingRoom)for(let t=parseInt(readingRoom.MinAppointmentLength);t<=parseInt(readingRoom.MaxAppointmentLength);t+=parseInt(readingRoom.AppointmentIncrement)){let r=Math.floor(t/60),u=t%60,i="";r==1?i=i+r.toString()+" hour ":r>1&&(i=i+r.toString()+" hours ");u>0&&(i=i+u.toString()+" minutes");AddOption(n,i,t,!1)}else AddOption(n,"Please select a date",null,!0);UpdateAppointmentTimeSelect()}async function FilterAppointmentLengthMenu(){let n=moment(document.getElementById("AppointmentDate").value,"MM/DD/YYYY"),t=document.getElementById("AppointmentLength");await GetAvailability(n).then(n=>{if(n!==undefined){let i=Math.max(...n.map(n=>parseInt(n.MaxAppointmentLength)));for(let n of t.options)n.disabled=parseInt(n.value)>parseInt(i);UpdateAppointmentTimeSelect()}})}async function UpdateAppointmentTimeSelect(){let t=document.getElementById("AppointmentLength"),n=document.getElementById("AppointmentTime");n.setAttribute("data-persisted-value",n.value);datePickerController.getSelectedDate("AppointmentDate")==null?(n.innerHTML="",AddOption(n,"Please select a valid appointment date",null,!0),n.value=null):await GetAvailability(new Date(datePickerController.getSelectedDate("AppointmentDate"))).then(i=>{n.innerHTML="";let r=moment().add(readingRoom.AppointmentMinLeadDays,"d");i.forEach(i=>{if(parseInt(t.value)<=parseInt(i.MaximumAppointmentLength)){let u=moment(i["StartTime-ISO8601"]).format("h:mm a")+" - "+moment(i["StartTime-ISO8601"]).add(parseInt(t.value),"minutes").format("h:mm a");moment(i["StartTime-ISO8601"])>=r&&AddOption(n,u,i["StartTime-ISO8601"])}});n.value=n.getAttribute("data-persisted-value")})}function RecalculateAppointmentTimes(n=true){var t=document.getElementById("AppointmentTime"),i=document.getElementById("AppointmentLength"),f=parseInt(i.value),r,u;OnAppointmentEditForm&&(r=moment(t.value),u=moment(r).add(f,"minutes"),document.getElementById("StartTime").value=r.format("YYYY-MM-DDTHH:mm:ss.000"),document.getElementById("StopTime").value=u.format("YYYY-MM-DDTHH:mm:ss.000"));n&&(t.value==""?ShowMessage(`There are ${t.options.length} available time slots for ${i.options[i.selectedIndex].text} on ${document.getElementById("AppointmentDate").value}`):ShowMessage(`Selected appointment time has changed to ${t.options[t.selectedIndex].text} on ${document.getElementById("AppointmentDate").value}`))}function AddOption(n,t,i,r=false){let u=document.createElement("option");u.value=i;u.text=t;r==!0&&(u.disabled=!0);n.appendChild(u)}async function UpdateDisplayedAvailability(n){if(window.readingRoom&&(firstDateDisplayed=n.firstDateDisplayed,lastDateDisplayed=n.lastDateDisplayed,!datesChecked.some(n=>n.firstDateDisplayed==firstDateDisplayed&&n.lastDateDisplayed==lastDateDisplayed))&&(datesChecked.push({firstDateDisplayed:firstDateDisplayed,lastDateDisplayed:lastDateDisplayed}),firstDateDisplayed!=null)){var t=moment(firstDateDisplayed,"YYYYMMDD"),i=moment(lastDateDisplayed,"YYYYMMDD");await GetAvailabilities(t,i).then(()=>{var n={};for(let t of Object.keys(readingRoom.appointmentAvailability))readingRoom.appointmentAvailability[t].length==0&&(n[moment(t,"YYYY-MM-DD").format("YYYYMMDD")]=1);let i=moment(lastDateDisplayed,"YYYYMMDD").toDate();datePickerController.addDisabledDates("AppointmentDate",n);let t=datePickerController.datePickers().AppointmentDate,r=datePickerController.getSelectedDate("AppointmentDate");t.date=i;t.updateTable()})}}function HandleError(n){n.status=="fail"?ShowError(n.message):ShowError("A server error occurred. Please refresh the page and try again. If this error persists, please contact staff.")}function ShowError(n){document.getElementById("SchedulerError").textContent=n}function ShowMessage(n){document.getElementById("SchedulerMessage").textContent=n}async function GetAvailabilities(n,t,i=true){var r,u;(readingRoom.appointmentAvailability===undefined||readingRoom.appointmentAvailability==null)&&(readingRoom.appointmentAvailability={});let e=moment(n).format("YYYY-MM-DD"),o=moment(t).format("YYYY-MM-DD");for(r=moment(n);r<moment(t)&&i==!0;){if(u=r.format("YYYY-MM-DD"),!(u in readingRoom.appointmentAvailability)){i=!1;break}r.add(1,"days")}if(i)return readingRoom.appointmentAvailability;let f={ReadingRoomID:$("#ReadingRoomID").val(),AppointmentStartDate:e,AppointmentEndDate:o};return GetResearcherUsername()&&(f.ResearcherUsername=GetResearcherUsername()),await $.ajax({type:"GET",url:"aeon.dll/ajax?query=GetAppointmentAvailabilities",data:f,success:function(i){if(i.status=="success"){for(d=n;d<=t;d.add(1,"days")){let n=d.format("YYYY-MM-DD");readingRoom.appointmentAvailability[n]=i.data[n]??[]}AddExistingAppointmentAvailability()}},error:function(){HandleError("Server error. Please refresh the page and try again. If this error persists, please contact staff.");console.log("Server Error")}}),readingRoom.appointmentAvailability}async function GetAvailability(n,t=true,i=false){let r=moment(n).format("YYYY-MM-DD");if((readingRoom.appointmentAvailability===undefined||readingRoom.appointmentAvailability==null)&&(readingRoom.appointmentAvailability={}),t||!(r in readingRoom.appointmentAvailability)){var u={ReadingRoomID:document.getElementById("ReadingRoomID").value,AppointmentDate:r,GetNextAvailable:i};OnAppointmentEditForm&&(u.CurrentAppointmentID=document.getElementById("AppointmentID").value);GetResearcherUsername()&&(u.ResearcherUsername=GetResearcherUsername());await $.ajax({type:"GET",url:"aeon.dll/ajax?query=GetAppointmentAvailability",data:u,success:function(n){n.status=="success"?readingRoom.appointmentAvailability[r]=n.data:(HandleError(n),console.log(n.message))},error:function(){HandleError("Server error. Please refresh the page and try again. If this error persists, please contact staff.");console.log("Server Error")}})}return AddExistingAppointmentAvailability(),readingRoom.appointmentAvailability[r]}function AddExistingAppointmentAvailability(){if(OnAppointmentEditForm){let t=readingRoom.appointments.find(n=>n.AppointmentID==document.getElementById("AppointmentID").value),i=moment(t.StartTime).format("YYYY-MM-DD");i in readingRoom.appointmentAvailability||(readingRoom.appointmentAvailability[i]=[]);let r=moment(t.StopTime).diff(t.StartTime,"minutes");var n=readingRoom.appointmentAvailability[i].filter(n=>n["StartTime-ISO8601"]==t.StartTime);if(n.length==1)n.MaximumAppointmentLength=Math.max(r,n.MaximumAppointmentLength).toString();else{let n={};n.UTCStartTime=moment(t.StartTime).toISOString().replace("Z","");n.StartTime=moment(t.StartTime).format("M/D/YYYY hh:mm:ss a");n["StartTime-ISO8601"]=t.StartTime;n.MaximumAppointmentLength=r.toString();n.SeatsAvailable="1";readingRoom.appointmentAvailability[i].push(n);readingRoom.appointmentAvailability[i].sort((n,t)=>moment(n["StartTime-ISO8601"]).diff(moment(t["StartTime-ISO8601"]),"minutes"))}}}function GetAvailabilityForTime(n){let t=moment(n).format("YYYY-MM-DD");if(!(t in readingRoom.appointmentAvailability))return!1;let i=readingRoom.appointmentAvailability[t].filter(t=>t["StartTime-ISO8601"]==moment(n).format("YYYY-MM-DDTHH:mm:ss.sss"));return i.length>0?i[0]:null}async function GetAppointments(){let n=null;if($("#"+RequestLinkAppt).length>0){if(n=$("#"+RequestLinkAppt).val(),n[0]=="E"){$(".appointments-enabled").addClass("d-none");$("#newAppointmentCollapse").addClass("d-none");OnViewAppointmentsPage||($("#AppointmentID").prop("disabled",!0),$("#AppointmentID").empty());$("#NewAppointment").prop("disabled",!0);return}n[0]=="R"&&($(".appointments-enabled").removeClass("d-none"),$("#newAppointmentCollapse").removeClass("d-none"),document.getElementById("AppointmentID")!=null&&document.getElementById("AppointmentID").offsetParent!=null&&$("#AppointmentID").prop("disabled",!1),document.getElementById("NewAppointment")!=null&&document.getElementById("NewAppointment").offsetParent!=null&&$("#NewAppointment").prop("disabled",!1))}if(!$("#ReadingRoomID").val()){OnViewAppointmentsPage||($("#AppointmentID").prop("disabled",!0),$("#AppointmentID").empty());$("#NewAppointment").prop("disabled",!0);return}let t={ReadingRoomID:$("#ReadingRoomID").val(),Context:defaultAppointmentContext};return n!=null&&n[0]=="R"&&(t.ResearcherUsername=n.slice(2),t.Context="researcher"),$("#TransactionNumber").val()&&(t.TransactionNumber=$("#TransactionNumber").val()),GetResearcherUsername()&&(t.ResearcherUsername=GetResearcherUsername()),new Promise(n=>{$.ajax({type:"GET",url:"aeon.dll/ajax?query=GetAppointments",data:t,success:function(t){t.status=="success"?(PopulateAppointments(t.data),n(t.data)):(HandleError(t),console.log(t.message))},error:function(){HandleError("Server error. Please refresh the page and try again. If this error persists, please contact staff.");console.log("Server Error")}})})}function PopulateAppointments(n){if(readingRoom.appointments=n,OnAppointmentEditForm){let t=document.getElementById("AppointmentID").value,n=readingRoom.appointments.find(n=>n.AppointmentID==t);document.getElementById("AppointmentDate").value=moment(n.StartTime).format("MM/DD/YYYY");datePickerController.setDateFromInput("AppointmentDate");document.getElementById("Name").value=n.Name;document.getElementById("AvailableToProxies").checked=n.AvailableToProxies=="True";FilterAppointmentLengthMenu().then(async()=>{document.getElementById("AppointmentLength").value=moment(n.StopTime).diff(moment(n.StartTime),"minutes"),await UpdateAppointmentTimeSelect(),document.getElementById("AppointmentTime").value=n.StartTime})}else if(!OnViewAppointmentsPage){let t=document.getElementById("AppointmentID");t.innerHTML="";readingRoom.AppointmentRequired=="True"?AddOption(t,"You must select an appointment","",!1):AddOption(t,"No Appointment","",!1);n.forEach(n=>{if(!jQuery.isEmptyObject(n)){var i="";n.Name&&(i=n.Name+": ");i=i+moment(n.StartTime).format("MM/DD/YYYY hh:mm a")+" - "+moment(n.StopTime).format("hh:mm a");AddOption(t,i,n.AppointmentID,!1)}});SelectPersistedValue($("#AppointmentID"));t.offsetParent!=null&&(t.disabled=!1);document.getElementById("NewAppointment").offsetParent!=null&&(document.getElementById("NewAppointment").disabled=!1)}}function CreateAppointment(){if(document.getElementById(RequestLinkAppt).value=="E"){ShowError("Cannot create an appointment for an activity.");return}let n={StartTime:moment(document.getElementById("AppointmentTime").value).format("YYYY-MM-DDTHH:mm:ss.sss"),StopTime:moment(document.getElementById("AppointmentTime").value).add(document.getElementById("AppointmentLength").value,"minutes").format("YYYY-MM-DDTHH:mm:ss.sss"),ReadingRoomID:document.getElementById("ReadingRoomID").value,AvailableToProxies:document.getElementById("AvailableToProxies").checked==!0,Name:document.getElementById("Name").value,ResearcherUsername:document.getElementById(RequestLinkAppt).value.slice(2)},[t,i]=ValidateAppointment(n);if(t)new Promise(()=>{$.ajax({type:"POST",url:"aeon.dll/ajax?query=CreateAppointment",data:n,success:function(t){t.status=="success"?OnViewAppointmentsPage?window.location.reload():GetAvailability(n.StartTime,!1).then(AppointmentCreated(t.data)):(ShowError(t.message),console.log(t.message))},error:function(){HandleError("Server error. Please refresh the page and try again. If this error persists, please contact staff.");console.log("Server Error")}})});else{ShowError(i);return}}function AppointmentCreated(n){GetAppointments().then(()=>{document.getElementById("AppointmentID").value=parseInt(n.AppointmentID),document.getElementById("AppointmentID").setAttribute("data-persisted-value",n.AppointmentID),document.getElementById("NewAppointment").click(),document.getElementById("SchedulerError").innerHTML=""})}function ValidateAppointment(n){let t=!0,r="";if(n.StartTime=="Invalid date"&&(r+="Invalid start time.\n",t=!1),n.StopTime=="Invalid date"&&(r+="Invalid appointment length.\n",t=!1),!t)return[t,r];for(i=0;i<readingRoom.appointments.length;i++)if(existingAppt=readingRoom.appointments[i],existingAppt.AppointmentID!=n.AppointmentID&&existingAppt.StartTime<n.StopTime&&existingAppt.StopTime>n.StartTime){r+="Unable to schedule an appointment that intersects an existing appointment.\n";t=!1;break}let u=GetAvailabilityForTime(n.StartTime);if(u==null||u.length==0)t=!1,r+=`${moment(n.StartTime).toLocaleString()} is not an available appointment time.
`;else{let i=moment(n.StartTime).add(u.MaximumAppointmentLength,"m");i<moment(n.StopTime)&&(t=!1,r+=`An appointment that begins at ${moment(n.StartTime).toLocaleString()} must end by ${i.toLocaleString()}
`)}return[t,r]}var appointmentsChanged=!1;const defaultAppointmentContext="both";var datesChecked=[],readingRooms=null,readingRoom=null,OnAppointmentEditForm=!1,OnViewAppointmentsPage=!1,RequestLinkAppt="RequestLink";window.addEventListener("load",async function(){var t,n;document.getElementById("ReadingRoomID").innerHTML="";document.getElementById("AppointmentDate").value=null;document.getElementById("Name").value=null;t=document.getElementById("RequestLinkAppt");typeof t!="undefined"&&t!=null&&(RequestLinkAppt="RequestLinkAppt");let i=document.getElementsByTagName("form");for(let n of i)n.name=="EditAppointment"&&(OnAppointmentEditForm=!0);if(OnViewAppointmentsPage=document.getElementById("AppointmentID")==null,(OnViewAppointmentsPage||getComputedStyle(document.getElementById("AppointmentID")).position!=="fixed")&&(document.getElementById("NewAppointment")==null||getComputedStyle(document.getElementById("NewAppointment")).position!=="fixed")&&(document.getElementById("ReadingRoomID")==null||getComputedStyle(document.getElementById("ReadingRoomID")).position!=="fixed")||console.log("The AppointmentID, NewAppointment, and/or ReadingRoomID elements have a fixed position and their visibility may not be accurately determined by appointments.js"),n=document.getElementById("Site"),n.tagName.toLowerCase()=="select"&&(document.getElementById("Site").onchange=async function(){GetReadingRooms()}),document.getElementById("ReadingRoomID").onchange=function(){window.readingRoom=readingRooms.filter(n=>n.ID===document.getElementById("ReadingRoomID").value)[0];SetAppointmentRequiredLabel();GetAppointments().then(async()=>{await RefreshDatePicker()}).then(()=>{moment(document.getElementById("AppointmentDate").value).format("YYYY-MM-DD")in readingRoom.appointmentAvailability||(document.getElementById("AppointmentDate").value=null)})},document.getElementById("AppointmentDate").onchange=function(){FilterAppointmentLengthMenu()},document.getElementById("AppointmentLength").onchange=function(){UpdateAppointmentTimeSelect().then(()=>{RecalculateAppointmentTimes()})},document.getElementById("AppointmentTime").onchange=function(){document.getElementById("AppointmentTime").setAttribute("data-persisted-value",document.getElementById("AppointmentTime").value);RecalculateAppointmentTimes(!1)},OnViewAppointmentsPage&&(document.getElementById("ScheduleNewAppointment").onclick=function(){var n=document.getElementById("Site");OnViewAppointmentsPage&&n.tagName.toLowerCase()=="select"&&n.selectedIndex==0&&(n.selectedIndex=1,n.onchange())}),OnAppointmentEditForm)GetReadingRooms();else{if(document.getElementById(RequestLinkAppt).onchange=async function(){await GetAppointments().then(()=>{GetReadingRooms()})},document.getElementById(RequestLinkAppt).value==""&&(OnViewAppointmentsPage||(document.getElementById("AppointmentID").innerHTML="")),document.getElementById("NewAppointment")&&(document.getElementById("NewAppointment").onclick=async function(){EnableField("AppointmentDate");EnableField("AppointmentLength");EnableField("AppointmentTime");await RefreshDatePicker()}),n=document.getElementById("Site"),n.tagName.toLowerCase()=="select"&&n.options.length<2)for(let n of document.getElementsByClassName("sites-enabled"))n.classList.add("d-none");document.getElementById("CreateAppointmentButton").onclick=CreateAppointment;GetReadingRooms()}})